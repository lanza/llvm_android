From 1ea3ff7c0acc9465eca52e73035af985b544089c Mon Sep 17 00:00:00 2001
From: Fangrui Song <i@maskray.me>
Date: Wed, 28 Dec 2022 18:08:29 -0800
Subject: [PATCH] [XRay] Unsupport version<2 sled entry

For many features we expect clang and compiler-rt to have a version lock
relation, yet for XRaySledEntry we have kept version<2 compatibility for more
than 2 years (I migrated away the last user mips in 2020-09 (D87977)).
I think it's fair to call an end to version<2 now. This should discourage more
work on version<2 (e.g. D140725).

Reviewed By: ianlevesque

Differential Revision: https://reviews.llvm.org/D140739
---
 compiler-rt/lib/xray/xray_interface_internal.h | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/compiler-rt/lib/xray/xray_interface_internal.h b/compiler-rt/lib/xray/xray_interface_internal.h
index 390f389b1dca..8c5973c58351 100644
--- a/compiler-rt/lib/xray/xray_interface_internal.h
+++ b/compiler-rt/lib/xray/xray_interface_internal.h
@@ -30,14 +30,10 @@ struct XRaySledEntry {
   unsigned char Version;
   unsigned char Padding[13]; // Need 32 bytes
   uint64_t function() const {
-    if (Version < 2)
-      return Function;
     // The target address is relative to the location of the Function variable.
     return reinterpret_cast<uint64_t>(&Function) + Function;
   }
   uint64_t address() const {
-    if (Version < 2)
-      return Address;
     // The target address is relative to the location of the Address variable.
     return reinterpret_cast<uint64_t>(&Address) + Address;
   }
@@ -49,14 +45,10 @@ struct XRaySledEntry {
   unsigned char Version;
   unsigned char Padding[5]; // Need 16 bytes
   uint32_t function() const {
-    if (Version < 2)
-      return Function;
     // The target address is relative to the location of the Function variable.
     return reinterpret_cast<uint32_t>(&Function) + Function;
   }
   uint32_t address() const {
-    if (Version < 2)
-      return Address;
     // The target address is relative to the location of the Address variable.
     return reinterpret_cast<uint32_t>(&Address) + Address;
   }
-- 
2.39.3

